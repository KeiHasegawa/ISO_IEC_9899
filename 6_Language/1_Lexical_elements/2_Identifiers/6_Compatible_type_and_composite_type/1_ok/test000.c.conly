/*
 * Check if ISO sample works well.
 * For 2nd `f' declaration, compiler will install `f' as
 *
 * int f(int (*)(char*), double (*)[3]);
 *
 * whose type is composite type.
 */
#include <stdio.h>

int f(int (*)(), double (*)[3]);
int f(int (*)(char*), double (*)[]);

int g(char*);

double a[3] = { 10, 11, 12 };

int main(void)
{
  f(&g,&a);
  return 0;
}

int f(int (*a)(char* a), double (*b)[3])
{
  printf("`f' called\n");
  char c[] = "composite test string";
  printf("(*a)(&c[0]) = %d\n", (*a)(&c[0]));
  for ( int i = 0 ; i < 3 ; ++i )
    printf(" %f", (*b)[i]);
  printf("\n");
}

int g(char* a)
{
  return printf("`g' called with \"%s\"\n", a);
}
