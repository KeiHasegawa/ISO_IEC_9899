    0x00000000000001p-1074, /* 倍精度最小非正規化数 */
    0x0fffffffffffffp-1074, /* 倍精度最大非正規化数 */
    0x10000000000000p-1074, /* 倍精度最小正規化数 */
    0x1fffffffffffffp+971,  /* 倍精度最大正規化数 */

この 1 つ目と 3 つ目の異なる定数に対して f での printf の結果が同じになっている.
原因は不明だが lof ファイルを gcc のものに戻しておいておいた.
---------------------------------------------------------------
gcc と結果が違うが合格としていた理由

x := (long double)y

に対して gcc も hcc1 も

fld{s,l} y のアドレス
fstpt	 x のアドレス

としている. fstpt 直前の %st0 や y は gcc と hcc1 とで同じであった.
例えば test002 の 0x00000000000001p-1074 に対して gdb の結果は

%st0 = 4.9406564584124654417656879286822137e-324
y : 0x00000001 0x00000000

である. fstpt 直後が gcc と hcc1 とで異なる.

gcc
x : 0x00000000 0x80000000 0xffff3bcd 0x00000000

hcc1
x : 0x00000000 0x80000000 0x802d3bcd 0x00000001

gdb で x のアドレスを *(long double*) のようにキャストして表示すると
%st0 にあった値が表示される.
